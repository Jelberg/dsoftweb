---MODULO 1---
CREATE TABLE PERSON(

PERSONID		serial  not null,
PERSONUSERNAME	varchar(20) not null,
PERSONPASSWORD	varchar(8) not null,
PERSONEMAIL	varchar(30) not null,
PERSONSEX		varchar(20) not null,
PERSONPHONE	varchar(20) not null,
constraint PK_PERSONID primary key (PERSONID)
);

CREATE TABLE REGISTRY (

REGISTRYID 	integer not null,
REGISTRYWEIGHT	integer not null,
REGISTRYHEIGHT	varchar(20) not null,
REGISTRYPOINT	integer not null,
FK_PERSONID	integer not null,
constraint PK_REGISTRYID primary key (REGISTRYID)

);
---TERMINA MODULO 1---
CREATE TABLE TRAINING (
TRAININGID    integer not null,
TRAININGNAME varchar (80) not null,
TRAININGPERIOD integer not null,
TRAININGCALORIES integer not null,
FK_FRIENDSHIPID integer,
constraint  PK_TRAININGID primary key (TRAININGID)

);
--- TERMINA MODULO 6  ---

CREATE TABLE SPORT (
	
	SPORTID			NUMERIC NOT NULL PRIMARY KEY,
	SPORTNAME			VARCHAR(50) NOT NULL,
	SPORTMET			NUMERIC
	);
CREATE SEQUENCE SPORTID;



CREATE TABLE EXERCISE(
	EXERCISEID			INTEGER NOT NULL PRIMARY KEY,
	FK_SPORT			INTEGER,
	FK_PERSON			INTEGER
);
CREATE SEQUENCE EXERCISEID;

CREATE TABLE ACTIVITY(

	ACTIVITYID			 INTEGER NOT NULL PRIMARY KEY,
	ACTIVITYSTARTTIME	 TIME,
	ACTIVITYENDTIME		 TIME,
	ACTIVITYDATE		 DATE,
	ACTIVITYKM			 NUMERIC NOT NULL,
	ACTIVITYCALOR		 NUMERIC,
	ACTIVITYSTARTSITE	 VARCHAR(200),
	ACTIVITYENDSITE		 VARCHAR(200),
	FK_REGISTRY	 		INTEGER,
	FK_SPORT			INTEGER,
	FK_TRAINING			INTEGER,
	FK_EXERCISE			INTEGER
);
CREATE SEQUENCE ACTIVITYID;


CREATE TABLE NOTIFICATION(

NOTIFICATIONID	integer not null,
SUBJECT		varchar(30) not null,
MESSAGE		varchar(150) not null,
FK_GLASS		integer,
FK_TRAINING	integer,
FK_CALENDAR	integer,
FK_ACTIVITY		integer,
FK_CHALLENGE	integer

);
CREATE TABLE NOTIFICATION_SETTINGS(

NOTIFICATIONSETTINGSID		integer not null,
PREFERENCEFRIENDS		boolean not null,
PREFERENCEACTIVITY		boolean not null,
PREFERENCETRAINING		boolean not null,
PREFERENCECHALLENGES	boolean not null,
PREFERENCEHYDRATION	boolean not null,
PREFERENCECALORIES		boolean not null,
PREFERENCEGAMIFICATION	boolean not null,
PREFERENCELANGUAGE		boolean not null,
FK_PERSON		integer not null
);

---MODULO 3---

CREATE TABLE STATUS(

STATUSID		integer  not null PRIMARY KEY,
STATUSPENDING	integer,
STATUSACCEPTED	integer,
STATUSBLOCKED	integer,
STATUSDECLINE	integer
);

CREATE TABLE FRIENDSHIP(
FRIENDSHIPID                        integer not null PRIMARY KEY,
FK_PERSONONEID		integer,
FK_PERSONTWOID	            integer,
FK_STATUSID                       integer,
FRIENDSHIPUSERACTIVITY	integer
);

---TERMINA MODULO 3---
/*
------MODULO 7 GESTION DE LA PLANIFICACION DE ACTIVIDADES
-- TABLAS QUE NO POSEEN CLAVES FORANEAS
-- DAY_WEEKEND TABLE
CREATE TABLE DAY_WEEKEND(
    DAYWEEKENDID serial not null
    DAYWEEKENDNAME date
    constraint PK_DAYWEEKENDID  primary key (DAYWEEKENDID)
);
--FREQUENCY_ACTIVITY_TAG_1
CREATE TABLE FREQUENCY_ACTIVITY_TAG_1(
    FREQUENCYACTIVITYTAG1ID serial not null
    FREQUENCYACTIVITYTAG1DATE date
	 FREQUENCYACTIVITYTAG1TIMESTART time
    FREQUENCYACTIVITYTAG1TIMELONG time
    constraint PK_FREQUENCYACTIVITYTAG1ID primary key (FREQUENCYACTIVITYTAG1ID)
);
--FREQUENCY_ACTIVITY_TAG_2
CREATE TABLE FREQUENCY_ACTIVITY_TAG_2(
    FREQUENCYACTIVITYTAG2ID serial not null
    FREQUENCYACTIVITYTAG2DATESTART date
    FREQUENCYACTIVITYTAG2DATEEND date
	 FREQUENCYACTIVITYTAG2TIMESTART time
    FREQUENCYACTIVITYTAG2TIMELONG time
    constraint PK_FREQUENCYACTIVITYTAG2ID primary key (FREQUENCYACTIVITYTAG2ID)
);
-- TABLAS QUE POSEEN CLAVES FORANEAS
--FREQUENCY_ACTIVITY_TAG_2_DAYWEEND (DEPENDE DE FREQUENCY_ACTIVITY_TAG_2 Y DAYWEENKEND)
CREATE TABLE FREQUENCY_ACTIVITY_TAG_2_DAYWEENKEND(
    FREQUENCYACTIVITYTAG2DAYWEENKENDID serial not null

    FK_FREQUENCYACTIVITYTAG2 numeric
    FK_DAYWEEKEND numeric
    
    constraint PK_FREQUENCYACTIVITYTAG2DAYWEENKENDID primary key (FREQUENCYACTIVITYTAG2DAYWEENKENDID)
);

-- MANAGEMENT_ACTIVITY (DEPENDE DE ACTIVITY,FREQUENCY_ACTIVITY_TAG_1,FREQUENCY_ACTIVITY_TAG_2)
CREATE TABLE MANAGEMENT_ACTIVITY (
    MANAGEMENTACTIVITYID serial not null
    FK_FREQUENCYACTIVITYTAG1 numeric
    FK_FREQUENCYACTIVITYTAG2 numeric
    FK_ACTIVITYID numeric
    constraint PK_MANAGEMENTACTIVITYID primary key (MANAGEMENTACTIVITYID)
);

-- DAY_TRAINNIG (DEPENDE DE DAY_WEEKENDID , TRAINNIG )
CREATE TABLE DAY_TRAINNIG (
    DAYTRAINNIGID serial not null
    DAYTRAINNIGTIMELONG time
    FK_WEEKEND numeric
    FK_TRAINNIG numeric
    constraint PK_DAYTRAINNIGID primary key (DAYTRAINNIGID)
);*/

-- TABLAS PERTENECIENTES AL MODULO 11

CREATE TABLE FOOD (
	FOODID SERIAL NOT NULL PRIMARY KEY,
	FOODNAME VARCHAR(150) NOT NULL,
	FOODWEIGHT NUMERIC NOT NULL,
	FOODCALORIE NUMERIC NOT NULL,
	FOODPERSONALIZED BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE MOMENT (
	MOMENTID SERIAL NOT NULL PRIMARY KEY,
	MOMENTDESCRIPTION VARCHAR(50) NOT NULL
);

CREATE TABLE DIET (
	DIETID SERIAL NOT NULL PRIMARY KEY,
	DIETCALORIE NUMERIC,
	DIETDATETIME DATE NOT NULL,
	FK_FOODID INTEGER NOT NULL,
	FK_MOMENTID INTEGER NOT NULL,
	FK_PERSONID INTEGER NOT NULL
);

-- FIN DE LAS TABLAS PERTENECIENTES AL MODULO 11











/*

-- MANAGEMENT_TRAINING (DEPENDE DE:DAY_TRAINING)
CREATE TABLE MANAGEMENT_TRAINING(
    MANAGEMENTTRAININGID serial not null
    MANAGEMENTTRAININGDAYSTART date
    MANAGEMENTTRAININGDAYEND date
    FK_MANAGEMENTTRAININGDAY numeric
    
    
    constraint PK_MANAGEMENTTRAININGID primary key (MANAGEMENTTRAININGID)

);




-- MANAGEMENT_CALENDAR (DEPENDE DE: PERSON,MANAGEMENT_ACTIVITY,MANAGEMENT_TRAINNIG)
CREATE TABLE MANAGEMENT_CALENDAR(
    MANAGEMENTCALENDARID serial not null
    
    FK_MANAGEMENTCALENDARUSER numeric
    FK_MANAGEMENTCALENDAR_MANACTIVITY numeric
    FK_MANAGEMENTCALENDAR_MANTRAINNIG numeric
    
    constraint PK_MANAGEMENT_CALENDARID primary key (MANAGEMENTCALENDARID)

);*/

---MODULO 8---

CREATE TABLE CHALLENGE (

CHALLENGEID serial primary key,
CHALLENGENAME varchar(30) not null,
CHALLENGEDESCRIPTION varchar(500) not null,
CHALLENGELEVEL integer,
CHALLENGESCORE integer,
FK_ACTIVITYID integer,
FK_FRIENDSHIPID integer
);
CREATE SEQUENCE CHALLENGEID
START WITH 1
INCREMENT BY 1;

CREATE TABLE DETAIL (
DETAILID serial primary key,
DETAILDATESTART timestamp not null,
DETAILDATEEND timestamp not null,
DETAILPOSITION integer not null,
DETAILACTIVE boolean not null,
FK_REGISTRYID integer,
FK_CHALLENGEID integer
);

CREATE SEQUENCE DETAILID
START WITH 1
INCREMENT BY 1;

---FIN MODULO 8---


-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ A L T E R S +++++++++++++++++++++++++++++++++++++++++++++
---MODULO 1---

ALTER TABLE REGISTRY
  ADD CONSTRAINT FK_USERID
  FOREIGN KEY(FK_PERSONID) 
  REFERENCES PERSON(PERSONID)
  ON DELETE CASCADE
  ON UPDATE CASCADE;

---FIN MODULO 1---



ALTER TABLE EXERCISE
ADD CONSTRAINT FK_RERSON
FOREIGN KEY (FK_PERSON) 
REFERENCES PERSON(PERSONID),
aDD CONSTRAINT FK_SPORT
FOREIGN KEY (FK_SPORT)
REFERENCES SPORT(SPORTID);

ALTER TABLE ACTIVITY
ADD CONSTRAINT FK_SPORT
FOREIGN KEY (FK_SPORT)
REFERENCES SPORT(SPORTID),
ADD CONSTRAINT FK_REGISTRY
FOREIGN KEY (FK_REGISTRY) 
REFERENCES REGISTRY(REGISTRYID)	,
/*ADD CONSTRAINT FK_TRAINING
FOREIGN KEY (FK_TRAINING) 
REFERENCES TRAINING(TRAININGID),*/
ADD CONSTRAINT  FK_EXERCISE
FOREIGN KEY (FK_EXERCISE) 
REFERENCES EXERCISE(EXERCISEID);


/*
ALTER TABLE  TRAINING
ADD CONSTRAINT  FK_FRIENDSHIPID
FOREIGN KEY (FK_FRIENDSHIPID)
REFERENCES FRIENDSHIP (FRIENSHIPID)
ON DELETE CASCADE
ON UPDATE CASCADE;




ALTER TABLE FRIENDSHIP
  ADD CONSTRAINT FK_PERSONONEID
  FOREIGN KEY(FK_PERSONONEID) 
  REFERENCES PERSON(PERSONID),
  ADD CONSTRAINT FK_PESONID
  FOREIGN KEY(FK_PERSONTWOID) 
  REFERENCES PERSON(PERSONID),
  ADD CONSTRAINT FK_STATUSID
  FOREIGN KEY(FK_STATUSID) 
  REFERENCES STATUS(STATUSID);









-----MODULO 7 GESTION DE LA PLANIFICACION DE ACTIVIDADES
-- Clave foranea FREQUENCY_ACTIVITY_TAG_2_DAYWEEND
ALTER TABLE FREQUENCY_ACTIVITY_TAG_2_DAYWEENKEND
  ADD CONSTRAINT FK_FREQUENCYACTIVITYTAG2
  FOREIGN KEY(FK_FREQUENCYACTIVITYTAG2)
  REFERENCES FREQUENCY_ACTIVITY_TAG_2(FREQUENCYACTIVITYTAG2ID)
  ON DELETE CASCADE
  ON UPDATE CASCADE;
ALTER TABLE FREQUENCY_ACTIVITY_TAG_2_DAYWEENKEND
  ADD CONSTRAINT FK_DAYWEEKEND
  FOREIGN KEY(FK_DAYWEEKEND)
  REFERENCES DAY_WEEKEND(DAYWEEKENDID)
  ON DELETE CASCADE
  ON UPDATE CASCADE;

-- clave foranea MANAGEMENT_ACTIVITY ()
ALTER TABLE MANAGEMENT_ACTIVITY
  ADD CONSTRAINT FK_FREQUENCYACTIVITYTAG1
  FOREIGN KEY(FK_FREQUENCYACTIVITYTAG1)
  REFERENCES FREQUENCY_ACTIVITY_TAG_1(FREQUENCYACTIVITYTAG1ID)
  ON DELETE CASCADE
  ON UPDATE CASCADE;
ALTER TABLE MANAGEMENT_ACTIVITY
  ADD CONSTRAINT FK_FREQUENCYACTIVITYTAG2
  FOREIGN KEY(FK_FREQUENCYACTIVITYTAG2)
  REFERENCES FREQUENCY_ACTIVITY_TAG_2(FREQUENCYACTIVITYTAG2ID)
  ON DELETE CASCADE
  ON UPDATE CASCADE;
ALTER TABLE MANAGEMENT_ACTIVITY
  ADD CONSTRAINT FK_ACTIVITYID
  FOREIGN KEY(FK_ACTIVITYID)
  REFERENCES ACTIVITY(ACTIVITYID)
  ON DELETE CASCADE
  ON UPDATE CASCADE;

-- clave foranea DAY_TRAINNIG  ()
ALTER TABLE DAY_TRAINNIG
  ADD CONSTRAINT FK_WEEKEND
  FOREIGN KEY(FK_WEEKEND)
  REFERENCES DAY_WEEKEND(DAYWEEKENDID)
  ON DELETE CASCADE
  ON UPDATE CASCADE;
ALTER TABLE DAY_TRAINNIG
  ADD CONSTRAINT FK_TRAINNIG
  FOREIGN KEY(FK_TRAINNIG)
  REFERENCES TRAINNIG(TRAINNIGID)
  ON DELETE CASCADE
  ON UPDATE CASCADE;

-- clave foranea MANAGEMENT_TRAINING ()
ALTER TABLE MANAGEMENT_TRAINING
  ADD CONSTRAINT FK_MANAGEMENTTRAININGDAY
  FOREIGN KEY(FK_MANAGEMENTTRAININGDAY )
  REFERENCES DAY_TRAINNIG(DAYTRAINNIGID)
  ON DELETE CASCADE
  ON UPDATE CASCADE;

-- clave foranea MANAGEMENT_CALENDAR
ALTER TABLE MANAGEMENT_CALENDAR
  ADD CONSTRAINT FK_MANAGEMENTCALENDARUSER
  FOREIGN KEY(FK_MANAGEMENTCALENDARUSER)
  REFERENCES PERSON(PERSONID)
  ON DELETE CASCADE
  ON UPDATE CASCADE;

 ALTER TABLE MANAGEMENT_CALENDAR
  ADD CONSTRAINT FK_MANAGEMENTCALENDAR_MANACTIVITY
  FOREIGN KEY(FK_MANAGEMENTCALENDAR_MANACTIVITY)
  REFERENCES MANAGEMENT_ACTIVITY(MANAGEMENTACTIVITYID)
  ON DELETE CASCADE
  ON UPDATE CASCADE;

  ALTER TABLE MANAGEMENT_CALENDAR
  ADD CONSTRAINT FK_MANAGEMENTCALENDAR_MANTRAINNIG
  FOREIGN KEY(FK_MANAGEMENTCALENDAR_MANTRAINNIG)
  REFERENCES MANAGEMENT_TRAINING(MANAGEMENTTRAININGID)
  ON DELETE CASCADE
  ON UPDATE CASCADE;


-- ALTER DEL MODULO 11

ALTER TABLE DIET 
ADD CONSTRAINT FK_FOODID FOREIGN KEY(FK_FOODID) REFERENCES FOOD(FOODID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE DIET 
ADD CONSTRAINT FK_MOMENTID FOREIGN KEY(FK_MOMENTID) REFERENCES MOMENT(MOMENTID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE DIET 
ADD CONSTRAINT FK_PERSONID FOREIGN KEY(FK_PERSONID) REFERENCES PERSON(PERSONID) ON DELETE CASCADE ON UPDATE CASCADE;

-- FIN ALTER MODULO 11

--ALTERS MODULO 4

ALTER TABLE NOTIFICATION

ADD CONSTRAINT PK_NOTIFICATIONID PRIMARY KEY (NOTIFICATIONID),
ADD CONSTRAINT FKGLASS FOREIGN KEY (FK_GLASS) REFERENCES GLASS(GLASSID) ON DELETE CASCADE ON UPDATE CASCADE,
ADD CONSTRAINT FKTRAINING FOREIGN KEY (FK_TRAINING) REFERENCES TRAINING(TRAININGID) ON DELETE CASCADE ON UPDATE CASCADE,
ADD CONSTRAINT FKCALENDAR FOREIGN KEY (FK_CALENDAR) REFERENCES MANAGEMENT_CALENDAR(MANAGEMENTCALENDARID) ON DELETE CASCADE ON UPDATE CASCADE,
ADD CONSTRAINT FKACTIVITY FOREIGN KEY (FK_ACTIVITY) REFERENCES ACTIVITY(ACTIVITYID) ON DELETE CASCADE ON UPDATE CASCADE,
ADD CONSTRAINT FKCHALLENGE FOREIGN KEY (FK_CHALLENGE) REFERENCES CHALLENGE(CHALLENGEID) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE NOTIFICATION_SETTINGS

ADD CONSTRAINT PK_NOTIFICATIONSETTINGID PRIMARY KEY (NOTIFICATIONSETTINGSID),
ADD CONSTRAINT FK_PERSON FOREIGN KEY (FK_PERSON) REFERENCES PERSON(PERSONID) ON DELETE CASCADE ON UPDATE CASCADE;




---MODULO 8---

alter table CHALLENGE add constraint FK_ACTIVITY foreign key (FK_ACTIVITYID) references ACTIVITY (ACTIVITYID);
alter table CHALLENGE add constraint FK_FRIENDSHIP foreign key (FK_FRIENDSHIPID) references FRIENDSHIP (FRIENSHIPID);

alter table DETAIL add constraint FK_CHALLENGE foreign key (FK_CHALLENGEID) references CHALLENGE (CHALLENGEID);
alter table DETAIL add constraint FK_REGISTRY foreign key (FK_REGISTRYID) references REGISTRY (REGISTRYID);


--- FIN MODULO 8---
*/








